Name            FCC-CPLD;
Partno          FCC001;
Revision        01;
Date            07/02/17;
Designer        Freak;
Company         None;
Location        None;
Assembly        None;
Device          f1504isptqfp100;

/****************************************************************/
/*                                                              */
/*      Logik fuer die "Final Chess Card"                       */
/*                                                              */
/****************************************************************/

PROPERTY ATMEL {PREASSIGN = KEEP};
PROPERTY ATMEL {PIN_KEEP = OFF};
PROPERTY ATMEL {OUTPUT_FAST = OFF};
PROPERTY ATMEL {JTAG = ON};
PROPERTY ATMEL {TDI_PULLUP = OFF};
PROPERTY ATMEL {TMS_PULLUP = OFF};
PROPERTY ATMEL {XOR_SYNTHESIS = OFF};
PROPERTY ATMEL {CASCADE_LOGIC = ON};
/* PROPERTY ATMEL {MC_POWER = ON}; */
/* PROPERTY ATMEL {SOFT_BUFFER = OFF}; */



/*
 * Definition der Eingaenge ins CPLD
 */

/* FCC Eingaenge */

Pin [100,99,98,97,96,94,93,92] = [intA8..15];

Pin 40  = RAM_Size;

Pin 85  = intPhi2;
Pin 10  = !intWrite;

NODE nIntWrite;
nIntWrite = !intWrite;

/* C64 Eingaenge */

Pin 23  = !Reset;

Pin 21  = nIO1;
Pin 19  = nIO2;
Pin 25  = nRomH;
Pin 48  = nRomL;
Pin 87  = Phi2;
Pin 90  = DotClk;
Pin 41  = nWrite;
Pin 42  = FCC_On;

/* Bidirektionaler Transfer-Port */

Pin [60,63,65,64,61,58,57,56] = [Port_A0..7];
Pin [29,30,31,32,33,35,36,37] = [Port_B0..7];


/*
 * Definition der Ausgaenge des CPLD
 */

/* C64 Ausgaenge */

Pin 47  = !FCC_Enable;
Pin 52  = ROM1_Bank;
Pin 54  = !ROM1_CE;
Pin 45  = !Rdy_PortA;

/* FCC Ausgaenge */

Pin 80  = !ROM2_CE;
Pin 79  = !RAM_SEL;
Pin 81  = !MEM_OE;
Pin 83  = !MEM_WE;
Pin 16  = !intNMI;



NODE  Conf_Clk_En;
Pin 14 = Dummy; /* Test-Pin */

NODE  PortADDR;

/*
 * Logik
 */

FIELD intADDR = [intA15..intA8];

PortADDR = intADDR:[7Fxx];


/* Signalaufbereitung */

NODE  nIO1_DelA;
NODE  nIO1_DelB;
NODE  nIO1_good;
nIO1_DelA.d       = nIO1;
nIO1_DelA.ck      = DotClk;
nIO1_DelB.d       = nIO1_DelA;
nIO1_DelB.ck      = DotClk;
nIO1_good         = (nIO1 # nIO1_DelA # nIO1_DelB);


NODE  nIO2_DelA;
NODE  nIO2_DelB;
NODE  nIO2_good;
nIO2_DelA.d       = nIO2;
nIO2_DelA.ck      = DotClk;
nIO2_DelB.d       = nIO2_DelA;
nIO2_DelB.ck      = DotClk;
nIO2_good         = (nIO2 # nIO2_DelA # nIO2_DelB);


/* Ansteuerung des ROM1 (C64-ROM) */

ROM1_CE = FCC_Enable & !(nRomH & nRomL);

/* Ansteuerung des ROM2 (FCC-ROM) */

ROM2_CE = intADDR:[8000..FFFF];


/* Ansteuerung des RAMs */

RAM_SEL = intADDR:[0000..1FFF] &  RAM_Size
        # intADDR:[0000..7EFF] & !RAM_Size;


/* FCC-interner Speicherzugriff: Lesen */

MEM_OE  = !intWrite & intPhi2;

/* FCC-interner Speicherzugriff: Schreiben */

MEM_WE  = intWrite & intPhi2;


/* NMI-Request fuer FCC-interne CPU */

intNMI.ar      = Reset;
intNMI.ap      = (!nIO2_good & !nWrite & Phi2);
intNMI.d       = 'b'0;
intNMI.ck      = PortADDR & !intWrite & intPhi2;

/* NMI-Request fuer C64 */

Rdy_PortA.ar   = Reset;
Rdy_PortA.ap   = PortADDR & intWrite & intPhi2;
Rdy_PortA.d    = 'b'0;
Rdy_PortA.ck   = nIO2_good # (!nWrite & Phi2);



/* Konfiguration-Register */

ROM1_Bank.ar   = Reset;
ROM1_Bank.d    = Port_A0.io;
ROM1_Bank.ck   = (Conf_Clk_En # nIO1_good # (nWrite & Phi2));

FCC_Enable.ap  = Reset;
FCC_Enable.d   = !Port_A1.io;
FCC_Enable.ck  = (Conf_Clk_En # nIO1_good # (nWrite & Phi2));

Conf_Clk_En.ar = Reset;
Conf_Clk_En.d  = 'b'0; /* naechstes PCB-Update: Port_A7 */ 
Conf_Clk_En.ck = (Conf_Clk_En # nIO1_good # (nWrite & Phi2));


/* Transfer-Ports */

/* FCC-Empfangsregister = C64-Senderegister */
[Port_B0..7].d   = [Port_A0..7].io;
[Port_B0..7].ck  = nIO2_good # (nWrite & Phi2);
[Port_B0..7].oe  = PortADDR & !intWrite & intPhi2;

/* C64-Empfangsregister = FCC-Senderegister */

[Port_A0..7].d   = [Port_B0..7].io;
[Port_A0..7].ck  = (!PortADDR # (nIntWrite & intPhi2));
[Port_A0..7].oe  = Phi2 & !(nIO2_good # !nWrite);
