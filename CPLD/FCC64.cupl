Name            FCC-CPLD;
Partno          FCC001;
Revision        01;
Date            07/04/17;
Designer        Freak;
Company         None;
Location        None;
Assembly        None;
Device          f1504isptqfp100;

/****************************************************************/
/*                                                              */
/*      Logik fuer die "Final Chess Card"                       */
/*                                                              */
/****************************************************************/

PROPERTY ATMEL {PREASSIGN = KEEP};
PROPERTY ATMEL {PIN_KEEP = OFF};
PROPERTY ATMEL {OUTPUT_FAST = OFF};
PROPERTY ATMEL {JTAG = ON};
PROPERTY ATMEL {TDI_PULLUP = OFF};
PROPERTY ATMEL {TMS_PULLUP = OFF};
PROPERTY ATMEL {XOR_SYNTHESIS = OFF};
PROPERTY ATMEL {CASCADE_LOGIC = ON};
/* PROPERTY ATMEL {MC_POWER = ON}; */
/* PROPERTY ATMEL {SOFT_BUFFER = OFF}; */



/*
 * Definition der Eingaenge ins CPLD
 */

/* FCC Eingaenge */

Pin [100,99,98,97,96,94,93,92] = [intA8..15];

Pin 40  = RAM_Size;

Pin 85  = intPhi2;
Pin 10  = !intWrite;

NODE nIntWrite;
nIntWrite = !intWrite;

/* C64 Eingaenge */

Pin 23  = !Reset;

Pin 21  = !IO1;
Pin 19  = !IO2;
Pin 25  = !RomH;
Pin 48  = !RomL;
Pin 87  = Phi2;
Pin 90  = DotClk;
Pin 41  = RW;
Pin 42  = FCC_On;

/* Bidirektionaler Transfer-Port */

Pin [60,63,65,64,61,58,57,56] = [Port_B0..7];
Pin [29,30,31,32,33,35,36,37] = [Port_A0..7];


/*
 * Definition der Ausgaenge des CPLD
 */

/* C64 Ausgaenge */

Pin 47  = FCC_Enable;
Pin 52  = ROM1_Bank;
Pin 54  = !ROM1_CE;
Pin 45  = !Rdy_PortB;

/* FCC Ausgaenge */

Pin 80  = !ROM2_CE;
Pin 79  = !RAM_SEL;
Pin 81  = !MEM_OE;
Pin 83  = !MEM_WE;
Pin 16  = !intNMI;



NODE  ConfReg_Clk_Disable;
Pin 14 = Dummy; /* Test-Pin */

NODE  PortADDR;

/*
 * Logik
 */

FIELD intADDR = [intA15..intA8];

PortADDR = intADDR:[7Fxx];


/* Signalaufbereitung */

NODE  IO1_DelA;
NODE  IO1_DelB;
NODE  IO1_good;
IO1_DelA.d       = IO1;
IO1_DelA.ck      = DotClk;
IO1_DelB.d       = IO1_DelA;
IO1_DelB.ck      = DotClk;
IO1_good         = !(IO1 & IO1_DelA & IO1_DelB);


NODE  IO2_DelA;
NODE  IO2_DelB;
NODE  IO2_good;
IO2_DelA.d       = IO2;
IO2_DelA.ck      = DotClk;
IO2_DelB.d       = IO2_DelA;
IO2_DelB.ck      = DotClk;
IO2_good         = !(IO2 & IO2_DelA & IO2_DelB);


/* Ansteuerung des ROM1 (C64-ROM) */

ROM1_CE = !FCC_Enable & (RomH # RomL);

/* Ansteuerung des ROM2 (FCC-ROM) */

ROM2_CE = intADDR:[8000..FFFF];


/* Ansteuerung des RAMs */

RAM_SEL = intADDR:[0000..1FFF] &  RAM_Size
        # intADDR:[0000..7EFF] & !RAM_Size;


/* FCC-interner Speicherzugriff: Lesen */

MEM_OE  = !intWrite & intPhi2;

/* FCC-interner Speicherzugriff: Schreiben */

MEM_WE  = intWrite & intPhi2;


/* NMI-Request fuer FCC-interne CPU */

intNMI.ar      = Reset;
intNMI.ap      = (!IO2_good & !RW & Phi2);
intNMI.d       = 'b'0;
intNMI.ck      = !(PortADDR & !intWrite & intPhi2);


/* NMI-Request fuer C64 */

Rdy_PortB.ar   = Reset;
Rdy_PortB.ap   = PortADDR & intWrite & intPhi2;
Rdy_PortB.d    = 'b'0;
Rdy_PortB.ck   = IO2_good # (!RW & Phi2);



/* Konfiguration-Register */

ROM1_Bank.ar           = Reset;
ROM1_Bank.d            = Port_B0.io;
ROM1_Bank.ck           = (ConfReg_Clk_Disable # IO1_good # (RW & Phi2));

FCC_Enable.ar          = Reset;
FCC_Enable.d           = Port_B1.io;
FCC_Enable.ck          = (ConfReg_Clk_Disable # IO1_good # (RW & Phi2));

ConfReg_Clk_Disable.ar = Reset;
ConfReg_Clk_Disable.d  = 'b'0; /* naechstes PCB-Update: Port_B7 */ 
ConfReg_Clk_Disable.ck = (ConfReg_Clk_Disable # IO1_good # (RW & Phi2));



/* Transfer-Ports */

/* FCC-Empfangsregister = C64-Senderegister */

[Port_A0..7].d   = [Port_B0..7].io;
[Port_A0..7].ck  = IO2_good # (RW & Phi2);
[Port_A0..7].oe  = PortADDR & !intWrite & intPhi2;

/* C64-Empfangsregister = FCC-Senderegister */

[Port_B0..7].d   = [Port_A0..7].io;
[Port_B0..7].ck  = (!PortADDR # (nIntWrite & intPhi2));
[Port_B0..7].oe  = Phi2 & !(IO2_good # !RW);
